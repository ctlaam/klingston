var audio; var playControl; var progressControl; var progressHolder; var playProgressBar; var playProgressInterval; var currentTimeDisplay; var handControl; var bodyLoaded = function () { audio = document.getElementById("audio"); playControl = document.getElementById("play"); progressControl = document.getElementById("progress"); progressHolder = document.getElementById("progress_box"); progressBuffer = document.getElementById("load_progress"); playProgressBar = document.getElementById("play_progress"); currentTimeDisplay = document.getElementById("current_time_display"); handControl = document.getElementById("hand_progress"); if (audio != null) { setTimeSong(); pauseAudio(); playControl.addEventListener("click", function () { if (audio.paused) { playAudio() } else { pauseAudio() } }, true); progressHolder.addEventListener("mouseup", function (a) { setPlayProgress(a.pageX) }, true); handControl.addEventListener("mousedown", function () { blockTextSelection(); document.onmousemove = function (a) { stopTrackingPlayProgress(); setPlayProgress(a.pageX) }; document.onmouseup = function () { unblockTextSelection(); document.onmousemove = null; document.onmouseup = null; trackPlayProgress() } }, true); handControl.addEventListener("mouseup", function (a) { setPlayProgress(a.pageX) }, true) } }; function playAudio() { audio.play(); playControl.className = "pause control"; trackPlayProgress() } function pauseAudio() { audio.pause(); playControl.className = "play control"; stopTrackingPlayProgress() } function setTimeSong() { if (audio.duration) { currentTimeDisplay.innerHTML = formatTime(audio.duration) } } function trackPlayProgress() { playProgressInterval = setInterval(updatePlayProgress, 33) } function stopTrackingPlayProgress() { clearInterval(playProgressInterval) } function updatePlayProgress() { updateLoading(); playProgressBar.style.width = ((audio.currentTime / audio.duration) * (progressHolder.offsetWidth - 2)) + "px"; handControl.style.left = (((audio.currentTime / audio.duration) * (progressHolder.offsetWidth - 2)) - 7) + "px"; updateTimeDisplay() } function updateLoading() { var a; if ((audio.buffered != undefined) && (audio.buffered.length != 0)) { a = parseInt(((audio.buffered.end(0) / audio.duration) * 100), 10); progressBuffer.style.width = a + "%" } } function setPlayProgress(b) { updateLoading(); var a = Math.max(0, Math.min(1, (b - findPosX(progressHolder)) / progressHolder.offsetWidth)); audio.currentTime = a * audio.duration; playProgressBar.style.width = a * (progressHolder.offsetWidth - 2) + "px"; handControl.style.left = ((a * (progressHolder.offsetWidth - 2)) - 7) + "px"; updateTimeDisplay() } function updateTimeDisplay() { if (audio.duration) { currentTimeDisplay.innerHTML = formatTime(audio.duration - audio.currentTime) } } function blockTextSelection() { document.body.focus(); document.onselectstart = function () { return false } } function unblockTextSelection() { document.onselectstart = function () { return true } } function formatTime(a) { a = Math.round(a); minutes = Math.floor(a / 60); minutes = (minutes >= 10) ? minutes : "0" + minutes; a = Math.floor(a % 60); a = (a >= 10) ? a : "0" + a; return minutes + ":" + a } function findPosX(a) { var b = a.offsetLeft; while (a = a.offsetParent) { b += a.offsetLeft } return b };